workflows:
  ios_no_sign:
    name: iOS (no signing)
    instance_type: mac_mini_m1
    max_build_duration: 60
    environment:
      groups:
        - app-secrets        # enthält OPENAI_API_KEY / SERP_API_KEY / BING_API_KEY
      vars:
        XCODE_SCHEME: TendersApp
    cache:
      cache_paths:
        - $HOME/Library/Caches/Homebrew
        - $HOME/Library/Developer/Xcode/DerivedData -> **/project.yml
    scripts:
      - name: Show macOS & Xcode
        script: |
          sw_vers
          xcodebuild -version

      - name: Install XcodeGen (falls project.yml vorhanden)
        script: |
          set -e
          if [ -f project.yml ]; then
            brew install xcodegen || brew upgrade xcodegen || true
          fi

      - name: Generate Xcode project with XcodeGen
        script: |
          set -e
          if [ -f project.yml ]; then
            xcodegen generate
          fi

      - name: Locate Xcode project / workspace and scheme
        script: |
          set -euo pipefail
          shopt -s nullglob
          PROJ=""
          if compgen -G "*.xcworkspace" > /dev/null; then
            PROJ="$(ls -1 *.xcworkspace | head -n1)"
          elif compgen -G "*.xcodeproj" > /dev/null; then
            PROJ="$(ls -1 *.xcodeproj | head -n1)"
          else
            echo "No .xcworkspace or .xcodeproj found in repository."
            exit 66
          fi
          echo "Found project: $PROJ (scheme: ${XCODE_SCHEME})"
          # Für spätere Schritte persistent machen
          echo "export PROJECT_PATH='$PROJ'" >> "$CM_ENV"
          echo "export XCODE_SCHEME='${XCODE_SCHEME}'" >> "$CM_ENV"

      - name: Resolve Swift Package dependencies (if any)
        script: |
          set -euo pipefail
          source "$CM_ENV" || true
          PROJ="${PROJECT_PATH:-}"
          if [ -z "$PROJ" ]; then
            if compgen -G "*.xcworkspace" > /dev/null; then
              PROJ="$(ls -1 *.xcworkspace | head -n1)"
            else
              PROJ="$(ls -1 *.xcodeproj | head -n1)"
            fi
          fi
          echo "Using project: $PROJ"
          if [[ "$PROJ" == *.xcworkspace ]]; then
            xcodebuild -resolvePackageDependencies -workspace "$PROJ" -scheme "$XCODE_SCHEME"
          else
            xcodebuild -resolvePackageDependencies -project "$PROJ" -scheme "$XCODE_SCHEME"
          fi

      - name: Build (no code signing)
        script: |
          set -euo pipefail
          source "$CM_ENV" || true
          PROJ="${PROJECT_PATH:-}"
          if [ -z "$PROJ" ]; then
            if compgen -G "*.xcworkspace" > /dev/null; then
              PROJ="$(ls -1 *.xcworkspace | head -n1)"
            else
              PROJ="$(ls -1 *.xcodeproj | head -n1)"
            fi
          fi
          if [[ "$PROJ" == *.xcworkspace ]]; then
            xcodebuild -workspace "$PROJ" -scheme "$XCODE_SCHEME" -configuration Release -sdk iphoneos CODE_SIGNING_ALLOWED=NO CODE_SIGNING_REQUIRED=NO
          else
            xcodebuild -project "$PROJ" -scheme "$XCODE_SCHEME" -configuration Release -sdk iphoneos CODE_SIGNING_ALLOWED=NO CODE_SIGNING_REQUIRED=NO
          fi

    artifacts:
      - DerivedData/Build/Products/Release-iphoneos/*.app
      - DerivedData/Build/Products/Release-iphoneos/*.ipa
      - DerivedData/**/Build/Intermediates.noindex/**/*.xcactivitylog
      - $CM_ENV
