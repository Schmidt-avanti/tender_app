workflows:
  ios_no_sign:
    name: iOS (no signing)
    max_build_duration: 60
    environment:
      xcode: 16.4
      groups:
        - app-secrets   # optional; lege diese Gruppe in Codemagic an, z.B. OPENAI_API_KEY
      vars:
        CONFIGURATION: Release

    scripts:
      - name: Show macOS & Xcode
        script: |
          sw_vers
          xcodebuild -version

      - name: Locate project/workspace (or generate with XcodeGen)
        script: |
          set -euo pipefail

          find_xcproj() {
            WORKSPACE_FILE=$(find . -maxdepth 6 -type d -name "*.xcworkspace" | head -n 1 || true)
            PROJECT_FILE=$(find . -maxdepth 6 -type d -name "*.xcodeproj"    | head -n 1 || true)
          }

          find_xcproj

          if [[ -z "${WORKSPACE_FILE}" && -z "${PROJECT_FILE}" ]]; then
            echo "No .xcworkspace or .xcodeproj found. Trying to generate with XcodeGen…"
            # Install XcodeGen
            brew install xcodegen
            if [[ ! -f project.yml ]]; then
              echo "❌ project.yml not found in repo root. Please add it (see README)."
              exit 66
            fi
            xcodegen generate
            # Re-scan after generation
            find_xcproj
          fi

          if [[ -n "${WORKSPACE_FILE}" ]]; then
            echo "Using workspace: ${WORKSPACE_FILE}"
            BUILD_REF="workspace"
            BUILD_FILE="${WORKSPACE_FILE}"
          elif [[ -n "${PROJECT_FILE}" ]]; then
            echo "Using project: ${PROJECT_FILE}"
            BUILD_REF="project"
            BUILD_FILE="${PROJECT_FILE}"
          else
            echo "❌ Still no .xcworkspace or .xcodeproj found in repository."
            exit 66
          fi

          # Detect first shared scheme
          if [[ "${BUILD_REF}" == "workspace" ]]; then
            SCHEMES=$(xcodebuild -list -json -workspace "${BUILD_FILE}" 2>/dev/null | /usr/bin/python3 -c 'import sys,json;print("\n".join(json.load(sys.stdin)["workspace"]["schemes"]))')
          else
            SCHEMES=$(xcodebuild -list -json -project "${BUILD_FILE}" 2>/dev/null | /usr/bin/python3 -c 'import sys,json;print("\n".join(json.load(sys.stdin)["project"]["schemes"]))')
          fi

          if [[ -z "${SCHEMES}" ]]; then
            echo "❌ No schemes found. Make sure your scheme is Shared (or let XcodeGen create one)."
            exit 67
          fi

          SCHEME=$(echo "${SCHEMES}" | head -n 1)
          echo "Detected scheme: ${SCHEME}"

          echo "BUILD_REF=${BUILD_REF}" >> $CM_ENV
          echo "BUILD_FILE=${BUILD_FILE}" >> $CM_ENV
          echo "SCHEME=${SCHEME}"       >> $CM_ENV

      - name: Clean
        script: |
          set -euo pipefail
          rm -rf DerivedData || true

      - name: Build (no code signing)
        script: |
          set -euo pipefail
          if [[ "${BUILD_REF}" == "workspace" ]]; then
            xcodebuild \
              -workspace "$BUILD_FILE" \
              -scheme "$SCHEME" \
              -configuration "$CONFIGURATION" \
              -sdk iphoneos \
              -derivedDataPath DerivedData \
              CODE_SIGN_IDENTITY= \
              CODE_SIGNING_ALLOWED=NO \
              CODE_SIGNING_REQUIRED=NO \
              build
          else
            xcodebuild \
              -project "$BUILD_FILE" \
              -scheme "$SCHEME" \
              -configuration "$CONFIGURATION" \
              -sdk iphoneos \
              -derivedDataPath DerivedData \
              CODE_SIGN_IDENTITY= \
              CODE_SIGNING_ALLOWED=NO \
              CODE_SIGNING_REQUIRED=NO \
              build
          fi

      - name: Package unsigned .ipa for Sideloadly
        script: |
          set -euo pipefail
          APP_PATH=$(find DerivedData/Build/Products -type d -name "*.app" | head -n 1)
          echo "Found app at: $APP_PATH"
          test -d "$APP_PATH"
          mkdir -p Payload
          cp -R "$APP_PATH" Payload/
          zip -qry "TendersApp-unsigned.ipa" Payload
          rm -rf Payload
          echo "Unsigned IPA created: TendersApp-unsigned.ipa"

    artifacts:
      - TendersApp-unsigned.ipa
      - DerivedData/Build/Products/**/*.app
      - /tmp/xcodebuild_logs/*.log

    publishing:
      email:
        recipients:
          - your@email.tld
        notify:
          success: false
          failure: true

