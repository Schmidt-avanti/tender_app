workflows:
  ios_unsigned_ipa:
    name: iOS unsigned IPA (for Sideloadly)
    max_build_duration: 60
    environment:
      xcode: 16.4
      vars:
        SCHEME: TendersApp        # ← ggf. auf dein Scheme ändern
        CONFIGURATION: Release
        DERIVED_DATA: $CM_BUILD_DIR/DerivedData

    scripts:
      - name: Build (no signing)
        script: |
          set -eo pipefail

          # 1) Projekt/Workspace finden (oder mit XcodeGen erzeugen)
          if ls -1 *.xcworkspace >/dev/null 2>&1; then
            CONTAINER="$(ls -1 *.xcworkspace | head -n1)"
            PROJECT_FLAG=( -workspace "$CONTAINER" )
          elif ls -1 *.xcodeproj >/dev/null 2>&1; then
            CONTAINER="$(ls -1 *.xcodeproj | head -n1)"
            PROJECT_FLAG=( -project "$CONTAINER" )
          elif [ -f project.yml ] || [ -f project.yaml ]; then
            echo "Kein Xcode-Projekt gefunden – generiere mit XcodeGen…"
            brew install xcodegen || true
            xcodegen generate
            CONTAINER="$(ls -1 *.xcodeproj | head -n1)"
            PROJECT_FLAG=( -project "$CONTAINER" )
          else
            echo "❌ Kein .xcworkspace/.xcodeproj (und kein project.yml) im Repo gefunden."
            exit 1
          fi

          echo "➡️  Baue: $CONTAINER | Scheme: $SCHEME"

          # 2) (Optional) Packages auflösen – xcodebuild macht das beim Build ohnehin,
          #     aber so sieht man früh Fehler:
          xcodebuild "${PROJECT_FLAG[@]}" \
            -scheme "$SCHEME" \
            -resolvePackageDependencies

          # 3) Build ohne Signierung
          xcodebuild "${PROJECT_FLAG[@]}" \
            -scheme "$SCHEME" \
            -configuration "$CONFIGURATION" \
            -sdk iphoneos \
            -derivedDataPath "$DERIVED_DATA" \
            CODE_SIGNING_ALLOWED=NO CODE_SIGNING_REQUIRED=NO \
            build

      - name: Package unsigned .ipa
        script: |
          set -eo pipefail
          APP_PATH="$(find "$DERIVED_DATA/Build/Products/$CONFIGURATION-iphoneos" -type d -name "*.app" -print -quit)"
          if [ -z "$APP_PATH" ]; then
            echo "❌ Keine .app in $DERIVED_DATA/Build/Products/$CONFIGURATION-iphoneos gefunden."
            ls -R "$DERIVED_DATA/Build/Products" || true
            exit 1
          fi

          echo "Gefundene App: $APP_PATH"
          rm -rf Payload
          mkdir -p Payload build/ipa
          cp -R "$APP_PATH" Payload/
          IPA_NAME="${SCHEME}-unsigned-${CM_BUILD_ID}.ipa"
          (zip -qry "build/ipa/$IPA_NAME" Payload)
          rm -rf Payload
          echo "✅ IPA erstellt: build/ipa/$IPA_NAME"

    artifacts:
      - build/ipa/*.ipa
      - $DERIVED_DATA/Build/Products/$CONFIGURATION-iphoneos/*.app
      - $CM_BUILD_DIR/**/Build/**/*.log

    publishing:
      email:
        recipients:
          - you@example.com
        notify:
          success: true
          failure: true
