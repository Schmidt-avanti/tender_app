workflows:
  ios_release:
    name: iOS Release (Xcode 15.4, unsigned IPA for Sideloadly)
    max_build_duration: 60
    environment:
      xcode: 15.4
    scripts:
      - name: Show repo tree (debug)
        script: |
          set -e
          echo "PWD: $(pwd)"
          ls -la
          echo "---- ProcureFinder subtree ----"
          ls -la ProcureFinder || true

      - name: Install XcodeGen (latest)
        script: |
          set -e
          brew update
          brew install xcodegen || brew upgrade xcodegen || true
          xcodegen --version

      - name: Clean previous DerivedData & project
        script: |
          set -euxo pipefail
          rm -rf build/Derived
          rm -rf ProcureFinder.xcodeproj

      - name: Generate Xcode project from project.yml
        script: |
          set -euo pipefail
          test -f project.yml
          xcodegen generate
          test -d ProcureFinder.xcodeproj

      - name: Downgrade PBX project format for Xcode 15.4
        script: |
          set -euo pipefail
          PBX="ProcureFinder.xcodeproj/project.pbxproj"
          echo "Before patch:"
          (grep -n 'objectVersion\|compatibilityVersion' "$PBX" || true)
          # objectVersion 77 -> 60; compatibility "Xcode 16.0" -> "Xcode 15.0"
          /usr/bin/sed -i '' 's/objectVersion = [0-9][0-9]*/objectVersion = 60/' "$PBX"
          /usr/bin/sed -i '' 's/compatibilityVersion = "Xcode [0-9.]*"/compatibilityVersion = "Xcode 15.0"/' "$PBX"
          echo "After patch:"
          grep -n 'objectVersion\|compatibilityVersion' "$PBX" || true

      - name: Ensure minimal AppIcon (to satisfy actool)
        script: |
          set -euo pipefail
          ICONSET="ProcureFinder/Resources/Assets.xcassets/AppIcon.appiconset"
          mkdir -p "$ICONSET"
          CONTENTS="$ICONSET/Contents.json"
          if [ ! -s "$CONTENTS" ]; then
            cat > "$CONTENTS" << 'JSON'
            { "images": [], "info": { "version": 1, "author": "xcode" } }
            JSON
          fi

      - name: Build (unsigned device build)
        script: |
          set -euo pipefail
          APP_NAME="ProcureFinder"
          PROJECT_PATH="$CM_BUILD_DIR/ProcureFinder.xcodeproj"
          SCHEME="$APP_NAME"
          BUILD_DIR="$CM_BUILD_DIR/build"
          mkdir -p "$BUILD_DIR"

          xcodebuild \
            -project "$PROJECT_PATH" \
            -scheme "$SCHEME" \
            -configuration Release \
            -sdk iphoneos \
            -destination "generic/platform=iOS" \
            CODE_SIGNING_ALLOWED=NO CODE_SIGNING_REQUIRED=NO CODE_SIGNING_IDENTITY= \
            clean build \
            -derivedDataPath "$BUILD_DIR/Derived" \
            | tee "$BUILD_DIR/xcodebuild.log" | xcpretty

      - name: Package unsigned .ipa (for Sideloadly)
        script: |
          set -euo pipefail
          APP_PRODUCT="$CM_BUILD_DIR/build/Derived/Build/Products/Release-iphoneos/ProcureFinder.app"
          OUT_DIR="$CM_BUILD_DIR/build/ipa"
          if [ ! -d "$APP_PRODUCT" ]; then
            echo "ERROR: .app missing at $APP_PRODUCT"
            exit 2
          fi
          rm -rf "$OUT_DIR"
          mkdir -p "$OUT_DIR/Payload"
          cp -R "$APP_PRODUCT" "$OUT_DIR/Payload/ProcureFinder.app"
          (cd "$OUT_DIR" && zip -qry "../ProcureFinder-unsigned.ipa" Payload)
          echo "IPA packaged at build/ProcureFinder-unsigned.ipa"

    artifacts:
      - build/Derived/Build/Products/Release-iphoneos/ProcureFinder.app
      - build/ProcureFinder-unsigned.ipa
      - build/xcodebuild.log

    publishing:
      email:
        recipients:
          - ${CM_USER_EMAIL}
        notify:
          success: true
          failure: true
