workflows:
  ios_no_sign:
    name: iOS (no signing) – auto detect project
    max_build_duration: 60
    environment:
      xcode: 16.4
      cocoapods: default
      groups:
        - app-secrets   # Gruppe in Codemagic mit OPENAI_API_KEY (+ optional SERP_API_KEY/BING_API_KEY)
    scripts:
      - name: Show macOS & Xcode
        script: |
          xcodebuild -version
          sw_vers

      - name: Locate Xcode project / workspace and scheme
        script: |
          set -euo pipefail

          PROJECT_PATH="$(find . -name "*.xcworkspace" -o -name "*.xcodeproj" | head -n1 || true)"
          if [ -z "${PROJECT_PATH}" ]; then
            echo "❌ No .xcworkspace or .xcodeproj found in repository."
            exit 66
          fi
          echo "✅ Found: ${PROJECT_PATH}"

          if [[ "${PROJECT_PATH}" == *.xcworkspace ]]; then
            SCHEMES=$(xcodebuild -workspace "${PROJECT_PATH}" -list -json \
              | /usr/bin/python3 -c 'import sys,json; d=json.load(sys.stdin); print("\n".join(d["workspace"]["schemes"]))')
          else
            SCHEMES=$(xcodebuild -project "${PROJECT_PATH}" -list -json \
              | /usr/bin/python3 -c 'import sys,json; d=json.load(sys.stdin); print("\n".join(d["project"]["schemes"]))')
          fi

          echo "Available schemes:"
          echo "${SCHEMES}"

          SCHEME="$(echo "${SCHEMES}" | head -n1)"
          if [ -z "${SCHEME}" ]; then
            echo "❌ No scheme found."
            exit 66
          fi
          echo "✅ Using scheme: ${SCHEME}"

          echo "export PROJECT_PATH='${PROJECT_PATH}'" >> "$CM_ENV"
          echo "export SCHEME='${SCHEME}'" >> "$CM_ENV"

      - name: Resolve Swift Package dependencies (if any)
        script: |
          set -euo pipefail
          if [[ "${PROJECT_PATH}" == *.xcworkspace ]]; then
            xcodebuild -resolvePackageDependencies -workspace "$PROJECT_PATH" -scheme "$SCHEME"
          else
            xcodebuild -resolvePackageDependencies -project "$PROJECT_PATH" -scheme "$SCHEME"
          fi

      - name: Write API keys into the correct Info.plist of the app target
        script: |
          set -euo pipefail

          if [[ "${PROJECT_PATH}" == *.xcworkspace ]]; then
            SETTINGS=$(xcodebuild -showBuildSettings -workspace "$PROJECT_PATH" -scheme "$SCHEME" -configuration Release)
          else
            SETTINGS=$(xcodebuild -showBuildSettings -project "$PROJECT_PATH" -scheme "$SCHEME" -configuration Release)
          fi

          INFOPLIST_FILE=$(echo "$SETTINGS" | awk -F' = ' '/ INFOPLIST_FILE /{print $2; exit}')
          if [ -z "$INFOPLIST_FILE" ]; then
            echo "❌ Could not determine INFOPLIST_FILE"
            exit 1
          fi

          PROJ_DIR=$(dirname "$PROJECT_PATH")
          if [ "$PROJ_DIR" = "." ]; then
            PLIST_PATH="$INFOPLIST_FILE"
          else
            PLIST_PATH="$PROJ_DIR/$INFOPLIST_FILE"
          fi

          if [ ! -f "$PLIST_PATH" ]; then
            echo "❌ Info.plist not found at: $PLIST_PATH"
            exit 1
          fi
          echo "✅ Using Info.plist: $PLIST_PATH"

          /usr/libexec/PlistBuddy -c "Delete :OPENAI_API_KEY" "$PLIST_PATH" || true
          /usr/libexec/PlistBuddy -c "Add :OPENAI_API_KEY string $OPENAI_API_KEY" "$PLIST_PATH"

          if [ -n "${SERP_API_KEY:-}" ]; then
            /usr/libexec/PlistBuddy -c "Delete :SERP_API_KEY" "$PLIST_PATH" || true
            /usr/libexec/PlistBuddy -c "Add :SERP_API_KEY string $SERP_API_KEY" "$PLIST_PATH"
          fi

          if [ -n "${BING_API_KEY:-}" ]; then
            /usr/libexec/PlistBuddy -c "Delete :BING_API_KEY" "$PLIST_PATH" || true
            /usr/libexec/PlistBuddy -c "Add :BING_API_KEY string $BING_API_KEY" "$PLIST_PATH"
          fi

      - name: Build iOS (no code signing)
        script: |
          set -euo pipefail
          if [[ "${PROJECT_PATH}" == *.xcworkspace ]]; then
            xcodebuild \
              -workspace "$PROJECT_PATH" \
              -scheme "$SCHEME" \
              -configuration Release \
              -sdk iphoneos \
              CODE_SIGNING_ALLOWED=NO CODE_SIGNING_REQUIRED=NO \
              build
          else
            xcodebuild \
              -project "$PROJECT_PATH" \
              -scheme "$SCHEME" \
              -configuration Release \
              -sdk iphoneos \
              CODE_SIGNING_ALLOWED=NO CODE_SIGNING_REQUIRED=NO \
              build
          fi

    artifacts:
      - DerivedData/Build/Products/Release-iphoneos/*.app
      - $CM_BUILD_DIR/ResultBundle_*.xcresult

    publishing:
      email:
        recipients:
          - aaron.schmidt.consulting@gmail.com
        notify:
          success: true
          failure: true
